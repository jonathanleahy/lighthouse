{
  "repositories": [
    {
      "repository_name": "accounts-api",
      "team": "psm-accounts",
      "description": "Create accounts"
    },
    {
      "repository_name": "acquisitions-api",
      "team": "psm-accounts",
      "description": "acquisitions-api repository managed by Accounts team"
    },
    {
      "repository_name": "accounts-commons",
      "team": "psm-accounts",
      "description": "Internal lib from psm-accounts to commons code."
    },
    {
      "repository_name": "multi-auth-api",
      "team": "psm-antifraud",
      "description": "API to handle multi-factor authentication"
    },
    {
      "repository_name": "anti-fraud-api",
      "team": "psm-antifraud",
      "description": "This API manages all interaction with third-party anti-fraud providers."
    },
    {
      "repository_name": "anti-fraud-jobs",
      "team": "psm-antifraud",
      "description": "CRON to use in anti-fraud team"
    },
    {
      "repository_name": "api-3ds-acs",
      "team": "psm-antifraud",
      "description": "api-3ds-acs repository managed by AntiFraud"
    },
    {
      "repository_name": "api-rates",
      "team": "psm-antifraud",
      "description": "api-rates repository managed by AntiFraud team"
    },
    {
      "repository_name": "rates-config-api",
      "team": "psm-antifraud",
      "description": "rates-config-api repository managed by AntiFraud team"
    },
    {
      "repository_name": "assets-accrual-purge-job",
      "team": "psm-assets",
      "description": "Project to purge date assets accrual"
    },
    {
      "repository_name": "assets-parser-flow-control",
      "team": "psm-assets",
      "description": "Control assets parser process flows"
    },
    {
      "repository_name": "assets-registration-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset registration"
    },
    {
      "repository_name": "assets-redemption-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset redemption"
    },
    {
      "repository_name": "assets-block-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset block"
    },
    {
      "repository_name": "assets-registration-many-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset type many registration"
    },
    {
      "repository_name": "assets-support-api",
      "team": "psm-assets",
      "description": "Project to support the consumer database assets API"
    },
    {
      "repository_name": "assets-collector-worker",
      "team": "psm-assets",
      "description": "Project to collect rate settings and non-working days"
    },
    {
      "repository_name": "assets-files-shard-lambda",
      "team": "psm-assets",
      "description": "Project to verify if all files of a shard it is in the bucket to init glue job"
    },
    {
      "repository_name": "assets-accrual-selector-worker",
      "team": "psm-assets",
      "description": "Project to find and send attributes to accrual assets"
    },
    {
      "repository_name": "interest-accrual-worker",
      "team": "psm-assets",
      "description": "Project to accrual interest to any type to asset"
    },
    {
      "repository_name": "assets-interest-accrual-api",
      "team": "psm-assets",
      "description": "Project to accrual interest to any type to asset"
    },
    {
      "repository_name": "assets-inactive-purge-job",
      "team": "psm-assets",
      "description": "Project to purge from database Assets and dependents in status final"
    },
    {
      "repository_name": "assets-purge-datalake",
      "team": "psm-assets",
      "description": "Project responsible for storing datalake notebooks referring to the insert Assets in final status in RDS for purge"
    },
    {
      "repository_name": "assets-interest-accrual-persist-worker",
      "team": "psm-assets",
      "description": "Project to persist accrual interest to any type to asset"
    },
    {
      "repository_name": "assets-status-worker",
      "team": "psm-assets",
      "description": "Project responsible for changing the status of Assets"
    },
    {
      "repository_name": "assets-accrual-data-lake",
      "team": "psm-assets",
      "description": "project responsible for storing datalake notebooks referring to the accrual process"
    },
    {
      "repository_name": "assets-accrual-airflow",
      "team": "psm-assets",
      "description": "Project responsible for storing airflow jobs referring to the Assets"
    },
    {
      "repository_name": "assets-operation-manager-job",
      "team": "psm-assets",
      "description": "project to create jobs that will alert us to various aspects of our processes and allow us to manage them efficiently."
    },
    {
      "repository_name": "assets-registration-test-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset registration. Test RDS in region US"
    },
    {
      "repository_name": "assets-redemption-test-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for asset redemption. Test RDS in region US"
    },
    {
      "repository_name": "assets-registration-datalake",
      "team": "psm-assets",
      "description": "Project to process all registration operations"
    },
    {
      "repository_name": "assets-redemption-datalake",
      "team": "psm-assets",
      "description": "Project to process all redemption operations"
    },
    {
      "repository_name": "assets-flow-control-datalake",
      "team": "psm-assets",
      "description": "Project to control the files input flow"
    },
    {
      "repository_name": "assets-collateral-api",
      "team": "psm-assets",
      "description": "Project collateral to endpoints"
    },
    {
      "repository_name": "assets-collateral-contract-worker",
      "team": "psm-assets",
      "description": "Project collateral to worker"
    },
    {
      "repository_name": "assets-collateral-events-handler-api",
      "team": "psm-assets",
      "description": "Project collateral events to endpoints"
    },
    {
      "repository_name": "assets-collateral-block-worker",
      "team": "psm-assets",
      "description": "Project to queue consumer for block and unblock asset collateral"
    },
    {
      "repository_name": "assets-worker-template",
      "team": "psm-assets",
      "description": "Template project for Java worker from the assets team"
    },
    {
      "repository_name": "assets-migration-worker",
      "team": "psm-assets",
      "description": "Worker to migrate assets from pismo to B3"
    },
    {
      "repository_name": "assets-institution-code-api",
      "team": "psm-assets",
      "description": "Api to generate codes (CODIF AND CODOP) and manage them centrally in order to reuse the structure"
    },
    {
      "repository_name": "assets-completed-events-worker",
      "team": "psm-assets",
      "description": "Worker to process completed events pismo to B3"
    },
    {
      "repository_name": "assets-accrual-api",
      "team": "psm-assets",
      "description": "assets-accrual-api repository managed by Assets team"
    },
    {
      "repository_name": "assets-terraform-datalake",
      "team": "psm-assets",
      "description": "repository to managed terraform files to datalake process"
    },
    {
      "repository_name": "commercial-draft-portability-datalake",
      "team": "psm-assets",
      "description": "The commercial-draft-portability-datalake is a datalake project responsible for parsing entry commercial-draft files"
    },
    {
      "repository_name": "acquirer-credentials-api",
      "team": "psm-atbmt",
      "description": "acquirer-credentials-api repository managed by TEAM team"
    },
    {
      "repository_name": "adjustments-api",
      "team": "psm-atbmt",
      "description": "adjustments-api repository managed by TEAM team"
    },
    {
      "repository_name": "transactionsgateway-api",
      "team": "psm-atbmt",
      "description": "An api to process all transactions to an acquirer or service"
    },
    {
      "repository_name": "banking-conciliation-worker",
      "team": "psm-banking",
      "description": "Worker to schedule and process conciliations"
    },
    {
      "repository_name": "judicial-orders-api",
      "team": "psm-banking",
      "description": "API for judicial orders functionality"
    },
    {
      "repository_name": "banking-reports-api",
      "team": "psm-banking",
      "description": "API for banking incomes and reports functionality"
    },
    {
      "repository_name": "bacen-spb-api",
      "team": "psm-banking",
      "description": "API for bacen spb functionality"
    },
    {
      "repository_name": "interest-bearing-account-api",
      "team": "psm-banking",
      "description": "API for interest bearing account functionality"
    },
    {
      "repository_name": "overdraft-account-api",
      "team": "psm-banking",
      "description": "API for overdraft account functionality"
    },
    {
      "repository_name": "core-banking-lib",
      "team": "psm-banking",
      "description": "Golang lib with common structs, interfaces, across core-banking repos"
    },
    {
      "repository_name": "banking-prospect-gateway-api",
      "team": "psm-banking",
      "description": "API for banking prospect gateway functionality"
    },
    {
      "repository_name": "banking-prospect-webhooks-api",
      "team": "psm-banking",
      "description": "API for banking prospect webhooks functionality"
    },
    {
      "repository_name": "banking-prospect-worker",
      "team": "psm-banking",
      "description": "API for banking prospect worker functionality"
    },
    {
      "repository_name": "accounts-itau",
      "team": "psm-banking",
      "description": "accounts-itau repository managed by Banking team"
    },
    {
      "repository_name": "api-rolesitau",
      "team": "psm-banking",
      "description": "api-rolesitau repository managed by Banking team"
    },
    {
      "repository_name": "bankaccounts-api",
      "team": "psm-banking",
      "description": "API to handle bank accounts, beneficiaries, transfers and banking related operations"
    },
    {
      "repository_name": "bankaccounts-sec",
      "team": "psm-banking",
      "description": "Bankaccounts Saga Execution Coordinator (SEC)"
    },
    {
      "repository_name": "banking-gateway-api",
      "team": "psm-banking",
      "description": "banking-gateway-api repository managed by Banking team"
    },
    {
      "repository_name": "banking-webhooks-api",
      "team": "psm-banking",
      "description": "banking-webhooks-api repository managed by Banking team"
    },
    {
      "repository_name": "bankslips-api",
      "team": "psm-banking",
      "description": "bankslips-api repository managed by Banking team"
    },
    {
      "repository_name": "integrated-payments-api",
      "team": "psm-banking",
      "description": "integrated-payments-api repository managed by Banking team"
    },
    {
      "repository_name": "intl-bank-accounts-api",
      "team": "psm-banking",
      "description": "intl-bank-accounts-api repository managed by Banking team"
    },
    {
      "repository_name": "qrcps-api",
      "team": "psm-banking",
      "description": "qrcps-api repository managed by Banking team"
    },
    {
      "repository_name": "console-psmcards-bff",
      "team": "psm-cards",
      "description": "BFF psmcards to Console"
    },
    {
      "repository_name": "cards-lambdas",
      "team": "psm-cards",
      "description": "Monorepo for all cards lambdas"
    },
    {
      "repository_name": "cards-v1-api",
      "team": "psm-cards",
      "description": "Cards domain implementation (non-pci, old cards-api-itau)"
    },
    {
      "repository_name": "api-cards-embossing",
      "team": "psm-cards",
      "description": "api-cards-embossing repository managed by Cards team"
    },
    {
      "repository_name": "api-cards-tokenization",
      "team": "psm-cards",
      "description": "api-cards-tokenization repository managed by Cards team"
    },
    {
      "repository_name": "api-cards-v2",
      "team": "psm-cards",
      "description": "api-cards-v2 repository managed by Cards team"
    },
    {
      "repository_name": "cards-api",
      "team": "psm-cards",
      "description": "cards-api repository managed by Cards team"
    },
    {
      "repository_name": "cards-api-itau",
      "team": "psm-cards",
      "description": "cards-api-itau repository managed by Cards team"
    },
    {
      "repository_name": "cardsonfile-api",
      "team": "psm-cards",
      "description": "cardsonfile-api repository managed by Cards team"
    },
    {
      "repository_name": "hsm-api",
      "team": "psm-cards",
      "description": "hsm-api repository managed by Cards team"
    },
    {
      "repository_name": "pcicards-api",
      "team": "psm-cards",
      "description": "repositório da cards pci-compliancy"
    },
    {
      "repository_name": "worker-cards",
      "team": "psm-cards",
      "description": "worker-cards repository managed by Cards team"
    },
    {
      "repository_name": "api-tokenization-services",
      "team": "psm-cards",
      "description": "api-tokenization-services repository managed by Tokenization team"
    },
    {
      "repository_name": "console-audit-bff",
      "team": "psm-console",
      "description": "BFF to Console Audit"
    },
    {
      "repository_name": "crashcourse-mf-orgvue",
      "team": "psm-console",
      "description": "Microfrontend Console Core - CrashCourse Organization example"
    },
    {
      "repository_name": "console-mf-audit-front",
      "team": "psm-console",
      "description": "Microfrontend Audit Console Core"
    },
    {
      "repository_name": "console-mf-embossing-front",
      "team": "psm-console",
      "description": "Microfrontend Embossing Console Core"
    },
    {
      "repository_name": "web-auth-lib",
      "team": "psm-console",
      "description": "Pismo universal web module for authentication"
    },
    {
      "repository_name": "console-mf-processing-codes-front",
      "team": "psm-console",
      "description": "Manage processing codes, transactions types and transactions categories"
    },
    {
      "repository_name": "waves-icons",
      "team": "psm-console",
      "description": "Pismo's icon library and manager"
    },
    {
      "repository_name": "mf-front-logs",
      "team": "psm-console",
      "description": "Pismo's front logs server"
    },
    {
      "repository_name": "control-center-container",
      "team": "psm-console",
      "description": "Control Center Container"
    },
    {
      "repository_name": "mf-audit",
      "team": "psm-console",
      "description": "Audit Microfrontend"
    },
    {
      "repository_name": "mf-users-management",
      "team": "psm-console",
      "description": "Users Management Microfrontend"
    },
    {
      "repository_name": "mf-users",
      "team": "psm-console",
      "description": "Users (Ping) Microfrontend"
    },
    {
      "repository_name": "mf-dual-approve-management",
      "team": "psm-console",
      "description": "Dual Approve Microfrontend"
    },
    {
      "repository_name": "mf-dual-approval-management",
      "team": "psm-console",
      "description": "Dual Approval Microfrontend"
    },
    {
      "repository_name": "notify-server",
      "team": "psm-console",
      "description": "Server for notify control-center"
    },
    {
      "repository_name": "ping-project",
      "team": "psm-console",
      "description": "Repo for Ping project"
    },
    {
      "repository_name": "pismo-ping-sdk",
      "team": "psm-console",
      "description": "Repository for the ping sdk that will be shared between the mfs"
    },
    {
      "repository_name": "ping-templates",
      "team": "psm-console",
      "description": "Email and forms templates for PingOne"
    },
    {
      "repository_name": "iam-bff",
      "team": "psm-console",
      "description": "API for the Ping Identity"
    },
    {
      "repository_name": "iam-worker",
      "team": "psm-console",
      "description": "Worker for the Ping Identity"
    },
    {
      "repository_name": "tribe-cdx-experiments",
      "team": "psm-console",
      "description": "pocs and experiments from tribe cdx"
    },
    {
      "repository_name": "console-audit-api",
      "team": "psm-console",
      "description": "console-audit-api repository managed by Console team"
    },
    {
      "repository_name": "console-users-bff",
      "team": "psm-console",
      "description": "console-users-bff repository managed by Console team"
    },
    {
      "repository_name": "control-center-configs",
      "team": "psm-console",
      "description": "External configurations from MFs to Control Center container"
    },
    {
      "repository_name": "transaction-banking-lib",
      "team": "psm-corporate",
      "description": "Golang lib with common shared code between transaction banking services"
    },
    {
      "repository_name": "bank-statements-api",
      "team": "psm-corporate",
      "description": "API responsible for creating a new balance structure"
    },
    {
      "repository_name": "bulk-payments-api",
      "team": "psm-corporate",
      "description": "API responsible for managing bulk payments in the corporate banking platform"
    },
    {
      "repository_name": "psm-corporate-tribe",
      "team": "psm-corporate",
      "description": "Project responsable for documentation as a code, scripts and other materials in the corporate banking platform"
    },
    {
      "repository_name": "corporate-config-api",
      "team": "psm-corporate",
      "description": "API responsible for corporate hierarchy and divisions"
    },
    {
      "repository_name": "cash-management-api",
      "team": "psm-corporate",
      "description": "API responsible for corporate earmarks, payments, and transactions"
    },
    {
      "repository_name": "corporate-api",
      "team": "psm-corporate",
      "description": "API responsible for the orchestration and corporate functionalities"
    },
    {
      "repository_name": "bulk-settlement-api",
      "team": "psm-corporate",
      "description": "API responsible for trigger bulk payments in the corporate banking platform"
    },
    {
      "repository_name": "balance-scheduled-events-worker",
      "team": "psm-creditcycle",
      "description": "Worker for Scheduled Accrual Events"
    },
    {
      "repository_name": "delinquency-bucket-worker",
      "team": "psm-creditcycle",
      "description": "Worker for Delinquency Bucket"
    },
    {
      "repository_name": "credit-cycle-template-api",
      "team": "psm-creditcycle",
      "description": "API Template for News APIs Java JDK 17"
    },
    {
      "repository_name": "delinquency-bucket-api",
      "team": "psm-creditcycle",
      "description": "API for Delinquency Bucket"
    },
    {
      "repository_name": "statement-refinancing-api",
      "team": "psm-creditcycle",
      "description": "API to Statement Refinancing Management"
    },
    {
      "repository_name": "balance-migrations-api",
      "team": "psm-creditcycle",
      "description": "API to manage integration between Migration and Balance "
    },
    {
      "repository_name": "balance-configurations-api",
      "team": "psm-creditcycle",
      "description": "API to manage configurations of credits programs"
    },
    {
      "repository_name": "cc-interest-accruals-api",
      "team": "psm-creditcycle",
      "description": "API for interest accruals management"
    },
    {
      "repository_name": "cc-post-transactions-worker",
      "team": "psm-creditcycle",
      "description": "Credit program transaction management worker"
    },
    {
      "repository_name": "cc-worker-test-automation",
      "team": "psm-creditcycle",
      "description": "Suite for credit cycle workers automation tests"
    },
    {
      "repository_name": "credit-cycle-fn",
      "team": "psm-creditcycle",
      "description": "Monorepo for Credit-Cycle squad serverless functions (Lambdas)."
    },
    {
      "repository_name": "legal-report-lambdas",
      "team": "psm-creditcycle",
      "description": "Monorepo for Legal Reports Squad serverless functions (Lambdas)."
    },
    {
      "repository_name": "cc-recharge-worker",
      "team": "psm-creditcycle",
      "description": "Credit cycle recharge management worker"
    },
    {
      "repository_name": "cc-transactions-worker",
      "team": "psm-creditcycle",
      "description": "Credit cycle transactions management worker"
    },
    {
      "repository_name": "cc-migrations-worker",
      "team": "psm-creditcycle",
      "description": "Credit cycle migrations flow management worker"
    },
    {
      "repository_name": "credit-cycle-go-fn",
      "team": "psm-creditcycle",
      "description": "Monorepo for Credit-Cycle squad golang serverless functions (Lambdas)."
    },
    {
      "repository_name": "statements-v2-api",
      "team": "psm-creditcycle",
      "description": "statements-v2-api repository managed by CreditCycle team"
    },
    {
      "repository_name": "tf-module-mongo-atlas",
      "team": "psm-data",
      "description": "Module to create Mongo Atlas resources"
    },
    {
      "repository_name": "dataservices-platform",
      "team": "psm-data",
      "description": "Data Services Platform base repository"
    },
    {
      "repository_name": "datalake-schema-change-monitoring",
      "team": "psm-data",
      "description": "Data Lake - Schema Change Monitoring"
    },
    {
      "repository_name": "tf-module-databricks",
      "team": "psm-data",
      "description": "Module to create Databricks resources"
    },
    {
      "repository_name": "datalake-reporting-scheduler-service",
      "team": "psm-data",
      "description": "Datalake Reporting Scheduler Service repository"
    },
    {
      "repository_name": "tf-module-mongo-atlas-users",
      "team": "psm-data",
      "description": "Module to create Mongo Atlas users"
    },
    {
      "repository_name": "tf-module-mwaa",
      "team": "psm-data",
      "description": "Module to create MWAA resources"
    },
    {
      "repository_name": "datalake-packages",
      "team": "psm-data",
      "description": "Repo to persist datalake packages"
    },
    {
      "repository_name": "data-grafana-cloud-promtail",
      "team": "psm-data",
      "description": "Repo to integrate logs from Data accounts to Grafana Cloud"
    },
    {
      "repository_name": "pismo-sql-endpoint",
      "team": "psm-data",
      "description": "SQL Endpoint main repo"
    },
    {
      "repository_name": "pismo-sql-endpoint-rbac",
      "team": "psm-data",
      "description": "SQL Endpoint RBAC"
    },
    {
      "repository_name": "dataplatform-order-events",
      "team": "psm-data",
      "description": "Repo to order events before fanout"
    },
    {
      "repository_name": "dataplatform-schema-event-producer",
      "team": "psm-data",
      "description": "Repo to produce JSON Schema change events"
    },
    {
      "repository_name": "datalake-scheduler-service-resources",
      "team": "psm-data",
      "description": "Repository with the main resources of the Data Lake Scheduler Service project"
    },
    {
      "repository_name": "datalake-scheduler-post-processing",
      "team": "psm-data",
      "description": "Repository with the main resources of the Data Lake Scheduler Service - Post-Processing project"
    },
    {
      "repository_name": "datalake-quality",
      "team": "psm-data",
      "description": "Repository with the main resources of the Data Lake Quality Project"
    },
    {
      "repository_name": "dataservices-images",
      "team": "psm-data",
      "description": "Dataservices custom images to Data"
    },
    {
      "repository_name": "datalake-quality-core",
      "team": "psm-data",
      "description": "Repository with the core resources and structures of the Data Lake Quality Project"
    },
    {
      "repository_name": "openmetadata-tools",
      "team": "psm-data",
      "description": "Repository with the tools to work with OpenMetadata"
    },
    {
      "repository_name": "data-iam",
      "team": "psm-data",
      "description": "IAM definition for Data Organization"
    },
    {
      "repository_name": "data-disposal",
      "team": "psm-data",
      "description": "Repository with the configuration of fields on Data Disposal Project"
    },
    {
      "repository_name": "databricks-grant-automation",
      "team": "psm-data",
      "description": "Repository to grant access tables in Databricks for squads"
    },
    {
      "repository_name": "data-analysis-billing-product",
      "team": "psm-dataanalysis",
      "description": "Data Analytics Billing Product repository"
    },
    {
      "repository_name": "aws-costs-product",
      "team": "psm-dataanalysis",
      "description": "Data Analytics AWS Costs Product repository"
    },
    {
      "repository_name": "tf-module-datalake-platform",
      "team": "psm-datalake",
      "description": "Module to create Data Lake resources"
    },
    {
      "repository_name": "datalake-platform",
      "team": "psm-datalake",
      "description": "Data Lake Platform base repository"
    },
    {
      "repository_name": "datalake-source-providers",
      "team": "psm-datalake",
      "description": "Data Lake base source providers repository"
    },
    {
      "repository_name": "datalake-sql",
      "team": "psm-datalake",
      "description": "Repository to run DDL and DML in Data Lake"
    },
    {
      "repository_name": "dataplatform-ops-setup-api",
      "team": "psm-dataplatform",
      "description": "Dataplatform as a service repository"
    },
    {
      "repository_name": "dataplatform-ops-setup-consumer",
      "team": "psm-dataplatform",
      "description": "Dataplatform OPS setup consumer repository"
    },
    {
      "repository_name": "dataplatform-health-check-producer",
      "team": "psm-dataplatform",
      "description": "Dataplatform health check producer repository"
    },
    {
      "repository_name": "dataplatform-sqs-subscriptions-monitoring",
      "team": "psm-dataplatform",
      "description": "Repository with the resources to monitor SQS Consumer subscriptions"
    },
    {
      "repository_name": "credit-rights-receivable-webhook",
      "team": "psm-depositary",
      "description": "Project to receive async response from our clients."
    },
    {
      "repository_name": "credit-rights-receivable-job",
      "team": "psm-depositary",
      "description": "Project meant to initialize the receivable reprocessing job."
    },
    {
      "repository_name": "depositary-endpoint-schedule",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to manage endpoint schedule."
    },
    {
      "repository_name": "depositary-commons",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to commons code."
    },
    {
      "repository_name": "depositary-commons-go",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to commons code - made in go."
    },
    {
      "repository_name": "depositary-kinesis",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to kinesis code."
    },
    {
      "repository_name": "depositary-sns",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to SNS code."
    },
    {
      "repository_name": "depositary-eventbridge",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to eventbridge code."
    },
    {
      "repository_name": "depositary-sqs",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to SQS code."
    },
    {
      "repository_name": "depositary-core",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to core code."
    },
    {
      "repository_name": "depositary-aws",
      "team": "psm-depositary",
      "description": "Internal lib from psm-depositary to aws code."
    },
    {
      "repository_name": "card-receivables-notification-worker",
      "team": "psm-depositary",
      "description": "Worker to publish events to card receivables applications."
    },
    {
      "repository_name": "contract-effects-api",
      "team": "psm-depositary",
      "description": "Project to handle contract effects over receivables."
    },
    {
      "repository_name": "card-receivables-model",
      "team": "psm-depositary",
      "description": "Project lib to shared model classes to our events."
    },
    {
      "repository_name": "credit-receivables-model",
      "team": "psm-depositary",
      "description": "Project lib to shared model classes to our events."
    },
    {
      "repository_name": "control-base-worker",
      "team": "psm-depositary",
      "description": "Worker to communicate with control base app based on events."
    },
    {
      "repository_name": "commercial-establishment-api",
      "team": "psm-depositary",
      "description": "Project to handle commercial establishments."
    },
    {
      "repository_name": "commercial-establishment-producer",
      "team": "psm-depositary",
      "description": "Project to handle commercial establishment incoming messages and publish commands."
    },
    {
      "repository_name": "unit-receivable-producer",
      "team": "psm-depositary",
      "description": "Project to handle unit receivable incoming messages and publish commands."
    },
    {
      "repository_name": "optin-producer",
      "team": "psm-depositary",
      "description": "Project to handle opt-in incoming messages and publish commands."
    },
    {
      "repository_name": "card-receivables-notification-lambda",
      "team": "psm-depositary",
      "description": "Lambda to redirect and publish events."
    },
    {
      "repository_name": "manifest-cdc-lambda",
      "team": "psm-depositary",
      "description": "Project to handle cdc from dynamodb table to control Manifest and flow of card receivables."
    },
    {
      "repository_name": "ce-output-files-transformer-lambda",
      "team": "psm-depositary",
      "description": "Project to handle Commercial Establishment data from firehose delivery stream and format incoming messages based on the return file layout."
    },
    {
      "repository_name": "ur-output-files-transformer-lambda",
      "team": "psm-depositary",
      "description": "Project to handle Unit Receivable data from firehose delivery stream and format incoming messages based on the return file layout."
    },
    {
      "repository_name": "consolidator-file-flow-lambda",
      "team": "psm-depositary",
      "description": "The consolidator is an orchestration flow implemented as a step function."
    },
    {
      "repository_name": "contract-monitor-flow-lambda",
      "team": "psm-depositary",
      "description": "The contract monitor is an orchestration flow implemented as a step function to send callbacks."
    },
    {
      "repository_name": "contract-callback-lambda",
      "team": "psm-depositary",
      "description": "The contract callback is a lambda function that queries the database and sends callbacks."
    },
    {
      "repository_name": "effect-notification-transformer-lambda",
      "team": "psm-depositary",
      "description": "The effect-notification-transformer is a lambda function that transforms UR events into notifications model."
    },
    {
      "repository_name": "effect-notification-consolidator-etl",
      "team": "psm-depositary",
      "description": "The effect-notification-consolidator-etl is an ETL intended to consolidate a file with all notifications by period."
    },
    {
      "repository_name": "card-receivables-file-processor-lambda",
      "team": "psm-depositary",
      "description": "The card-receivables-file-processor-lambda is a lambda function meant for pre-consolidating card-receivables files and updating the manifest-cdc."
    },
    {
      "repository_name": "pc-ur-transformer-lambda",
      "team": "psm-depositary",
      "description": "The pc-ur-transformer-lambda is a lambda function that writes early liquidated receivables events into an S3 Bucket file."
    },
    {
      "repository_name": "pc-consolidator-lambda",
      "team": "psm-depositary",
      "description": "The pc-consolidator-lambda is a lambda function meant for consolidating files from early liquidations of unit receivables (PC)."
    },
    {
      "repository_name": "optin-registrar-collect-lambda",
      "team": "psm-depositary",
      "description": "The optin-registrar-collect-lambda is a lambda function for collecting all the optins from multiple registrars."
    },
    {
      "repository_name": "contract-callback-express-lambda",
      "team": "psm-depositary",
      "description": "The contract callback express is a lambda function sends callbacks."
    },
    {
      "repository_name": "optin-transformer-lambda",
      "team": "psm-depositary",
      "description": "The optin-transformer-lambda is a lambda function for extracting optins."
    },
    {
      "repository_name": "agenda-callback-lambda",
      "team": "psm-depositary",
      "description": "The agenda callback is a lambda function that queries the agenda files and sends to the applicant."
    },
    {
      "repository_name": "agenda-transformer-lambda",
      "team": "psm-depositary",
      "description": "The agenda-transformer is a lambda function that transforms opt-in events into agenda model."
    },
    {
      "repository_name": "agenda-online-transformer-lambda",
      "team": "psm-depositary",
      "description": "The agenda-online-transformer is a lambda function that transforms opt-in events into agenda online model."
    },
    {
      "repository_name": "agenda-consolidator-lambda",
      "team": "psm-depositary",
      "description": "The agenda-consolidator is a lambda function that consolidate multiple files with unit receivables and opt-ins"
    },
    {
      "repository_name": "contract-extension-producer",
      "team": "psm-depositary",
      "description": "Project to handle incoming messages and publish contract extension commands."
    },
    {
      "repository_name": "ur-monitor-lambda",
      "team": "psm-depositary",
      "description": "This lambda function is responsible for determining whether an acquirer finished its UR operations for the day, by monitoring an S3 bucket looking for a file confirming this."
    },
    {
      "repository_name": "rescission-transformer-lambda",
      "team": "psm-depositary",
      "description": "The rescission-transformer-lambda is a lambda function that creates and writes rescission notifications csv files into an S3 Bucket file."
    },
    {
      "repository_name": "rename-bucket-file-lambda",
      "team": "psm-depositary",
      "description": "The rename-bucket-file-lambda is a lambda function responsible for renaming bucket files and making them available in the consolidator bucket."
    },
    {
      "repository_name": "ur-portability-transformer-lambda",
      "team": "psm-depositary",
      "description": "The ur-portability-transformer-lambda is a lambda function responsible for creating Unit Receivables from the Agenda data model."
    },
    {
      "repository_name": "contract-portability-transformer-lambda",
      "team": "psm-depositary",
      "description": "The contract-portability-transformer-lambda is a lambda function responsible for creating Contract from the Agenda data model."
    },
    {
      "repository_name": "ur-rollback-portability-lambda",
      "team": "psm-depositary",
      "description": "The ur-rollback-portability-lambda is a lambda function responsible for removing all Unit Receivables created in the portability process."
    },
    {
      "repository_name": "contract-rollback-portability-lambda",
      "team": "psm-depositary",
      "description": "The contract-rollback-portability-lambda is a lambda function responsible for removing all Contracts created in the portability process."
    },
    {
      "repository_name": "ce-rollback-portability-lambda",
      "team": "psm-depositary",
      "description": "The ce-rollback-portability-lambda is a lambda function responsible for removing all Commercial Establishment relations created in the portability process."
    },
    {
      "repository_name": "ur-portability-write-mongo-lambda",
      "team": "psm-depositary",
      "description": "The ur-portability-write-mongo-lambda is a lambda function responsible for inserting portability data into MongoDB."
    },
    {
      "repository_name": "contract-portability-write-mongo-lambda",
      "team": "psm-depositary",
      "description": "The contract-portability-write-mongo-lambda is a lambda function responsible for inserting portability data into MongoDB."
    },
    {
      "repository_name": "rescission-consolidator-lambda",
      "team": "psm-depositary",
      "description": "The rescission-consolidator-lambda is a lambda function that is responsible for reading files in S3, creating the header for the file and inserting that file into the card-receivables-consolidator bucket."
    },
    {
      "repository_name": "ur-monitor-transformer-lambda",
      "team": "psm-depositary",
      "description": "The ur-monitor-transformer-lambda is a lambda function that store UR events in files."
    },
    {
      "repository_name": "ur-early-liquidate-monitor-transformer-lambda",
      "team": "psm-depositary",
      "description": "The ur-early-liquidate-monitor-transformer-lambda is a lambda function that store early liquidated unit receivable events in files."
    },
    {
      "repository_name": "ur-monitor-consolidator-lambda",
      "team": "psm-depositary",
      "description": "The ur-monitor-consolidator-lambda is a lambda function responsible for gathering metrics of UR operations."
    },
    {
      "repository_name": "ur-monitor-report-lambda",
      "team": "psm-depositary",
      "description": "The ur-monitor-report-lambda is a lambda function responsible for generating reports of UR operations."
    },
    {
      "repository_name": "depositary-jobs",
      "team": "psm-depositary",
      "description": "The depositary-jobs is a repository to execute routine operations."
    },
    {
      "repository_name": "collect-organization-lambda",
      "team": "psm-depositary",
      "description": "The collect-organization-lambda is a lambda function responsible for querying the organizations' IDs from the database and returning the result list."
    },
    {
      "repository_name": "card-receivables-splitter-lambda",
      "team": "psm-depositary",
      "description": "The card-receivables-splitter-lambda is a lambda function responsible for counting lines in a file and splitting it into smaller files, each containing a maximum of configurable number of lines."
    },
    {
      "repository_name": "commercial-establishment-datalake",
      "team": "psm-depositary",
      "description": "Project to handle commercial establishment incoming files."
    },
    {
      "repository_name": "unit-receivable-datalake",
      "team": "psm-depositary",
      "description": "Project to handle unit receivables incoming files."
    },
    {
      "repository_name": "unit-receivable-liquidate-datalake",
      "team": "psm-depositary",
      "description": "Project to handle unit receivables liquidates incoming files."
    },
    {
      "repository_name": "holiday-datalake",
      "team": "psm-depositary",
      "description": "Project to manage non-working days."
    },
    {
      "repository_name": "receivable-reconciliation-datalake",
      "team": "psm-depositary",
      "description": "Project to manage receivables reconciliation."
    },
    {
      "repository_name": "receivable-reconciliation-transformer",
      "team": "psm-depositary",
      "description": "Project to transform receivables reconciliation files from datalake."
    },
    {
      "repository_name": "optin-datalake",
      "team": "psm-depositary",
      "description": "Project to handle optins incoming files."
    },
    {
      "repository_name": "agenda-datalake",
      "team": "psm-depositary",
      "description": "Project to process opt-ins and transform unit receivables into agenda files."
    },
    {
      "repository_name": "ur-monitor-datalake",
      "team": "psm-depositary",
      "description": "Project to consolidate Unit Receivable metrics into one CSV file per organization."
    },
    {
      "repository_name": "agenda-inventory-transformer-datalake",
      "team": "psm-depositary",
      "description": "Project to extract unit receivables, and write agenda inventory."
    },
    {
      "repository_name": "ur-inventory-transformer-datalake",
      "team": "psm-depositary",
      "description": "Project to extract unit receivables, and write inventory."
    },
    {
      "repository_name": "promissory-note-api",
      "team": "psm-depositary",
      "description": "Project for the management and processing of financial instruments. This project enables systems that provide functionality for handling electronic invoices, duplicate management and other financial instruments."
    },
    {
      "repository_name": "commercial-draft-api",
      "team": "psm-depositary",
      "description": "Project to handle incoming requests of commercial drafts."
    },
    {
      "repository_name": "commercial-draft-worker",
      "team": "psm-depositary",
      "description": "Project to deliver commercial drafts to external clients."
    },
    {
      "repository_name": "commercial-draft-job",
      "team": "psm-depositary",
      "description": "Project to handle pending commercial drafts processing."
    },
    {
      "repository_name": "credit-rights-receivable-api",
      "team": "psm-depositary",
      "description": "credit-rights-receivable-api repository managed by CredtCycle team"
    },
    {
      "repository_name": "unit-receivables-api",
      "team": "psm-depositary",
      "description": "unit-receivables-api repository managed by CreditCycle team"
    },
    {
      "repository_name": "promissory-note-agenda-datalake",
      "team": "psm-depositary",
      "description": "Project to process opt-ins and transform into agenda files."
    },
    {
      "repository_name": "console-sandbox-tools-bff",
      "team": "psm-devex",
      "description": "BFF to Console Sandbox"
    },
    {
      "repository_name": "sandbox-tools-api",
      "team": "psm-devex",
      "description": "API for sandbox tools"
    },
    {
      "repository_name": "sandbox-tools-ui",
      "team": "psm-devex",
      "description": "Sandbox/Playground UI"
    },
    {
      "repository_name": "devex-readme-ui",
      "team": "psm-devex",
      "description": "DevEx Readme UI"
    },
    {
      "repository_name": "devex-tools",
      "team": "psm-devex",
      "description": "DevEx Tools"
    },
    {
      "repository_name": "devex-content",
      "team": "psm-devex",
      "description": "Devex-Content"
    },
    {
      "repository_name": "devex-events-schemas",
      "team": "psm-devex",
      "description": "Devex-Events-Schemas"
    },
    {
      "repository_name": "openapi-converter",
      "team": "psm-devex",
      "description": "Openapi converter"
    },
    {
      "repository_name": "custom-collection-content",
      "team": "psm-devex",
      "description": "Custom-collection-content"
    },
    {
      "repository_name": "mf-permission-group",
      "team": "psm-devex",
      "description": "Permission Group Microfrontend"
    },
    {
      "repository_name": "groups-bff",
      "team": "psm-devex",
      "description": "Groups backend devex"
    },
    {
      "repository_name": "developer-portal",
      "team": "psm-devex",
      "description": "Developer Portal Scripts"
    },
    {
      "repository_name": "devex-readme-content",
      "team": "psm-devex",
      "description": "Readme sync content"
    },
    {
      "repository_name": "disputes-process-clearing-lambda",
      "team": "psm-disputes",
      "description": "Serverless functions (Lambda) responsible for receive clearing and filter if event has a dispute context and forwarding it to SQS."
    },
    {
      "repository_name": "bulletin-core",
      "team": "psm-disputes",
      "description": "responsible for operations related to manage cards in the network protection bulletin"
    },
    {
      "repository_name": "disputes-core",
      "team": "psm-disputes",
      "description": "responsible for operations related to disputes (v2)"
    },
    {
      "repository_name": "api-disputes",
      "team": "psm-disputes",
      "description": "api-disputes repository managed by Disputes team"
    },
    {
      "repository_name": "worker-disputes",
      "team": "psm-disputes",
      "description": "worker-disputes repository managed by Disputes team"
    },
    {
      "repository_name": "crm-core-bff",
      "team": "psm-enablement",
      "description": "BFF to CRM Core"
    },
    {
      "repository_name": "crm-protocol-bff",
      "team": "psm-enablement",
      "description": "The crm-protocol-bff project is responsible for serving specific endpoints for the CRM protocol domain."
    },
    {
      "repository_name": "crm-protocol-api",
      "team": "psm-enablement",
      "description": "The crm-protocol-api project is responsible for serving protocol domain-specific endpoints when handling customer calls."
    },
    {
      "repository_name": "console-mf-bko",
      "team": "psm-enablement",
      "description": "Console Backoffice module"
    },
    {
      "repository_name": "console-mf-fin-ops-front",
      "team": "psm-enablement",
      "description": "The console-mf-financial-operations-front project is a micro front-end part responsible for financial operations management"
    },
    {
      "repository_name": "backoffice-core-bff",
      "team": "psm-enablement",
      "description": "BFF with core backoffice features"
    },
    {
      "repository_name": "mf-dashboard",
      "team": "psm-enablement",
      "description": "The mf-dashboard project is a micro front-end part responsible for dashboards management"
    },
    {
      "repository_name": "control-center-dashboard-worker",
      "team": "psm-enablement",
      "description": "Tool to migrate analytics data to the control center"
    },
    {
      "repository_name": "mf-financial-setup",
      "team": "psm-enablement",
      "description": "Financial Setup Microfrontend"
    },
    {
      "repository_name": "mf-organization-management",
      "team": "psm-enablement",
      "description": "Organization Management Microfrontend"
    },
    {
      "repository_name": "mf-programs-management",
      "team": "psm-enablement",
      "description": "Programs Management Microfrontend"
    },
    {
      "repository_name": "control-center-dashboard-api",
      "team": "psm-enablement",
      "description": "The control-center-dashboard-api project is responsible for serving specific endpoints for the Control Center."
    },
    {
      "repository_name": "mf-flex-controls-management",
      "team": "psm-enablement",
      "description": "Flex Control Management Microfrontend"
    },
    {
      "repository_name": "flex-controls-bff",
      "team": "psm-enablement",
      "description": "BFF with core flex-controls features"
    },
    {
      "repository_name": "mf-transaction-categories",
      "team": "psm-enablement",
      "description": "Transaction Categories Microfrontend"
    },
    {
      "repository_name": "mf-embossing-management",
      "team": "psm-enablement",
      "description": "Embossing Management Microfrontend"
    },
    {
      "repository_name": "mf-interest-plans-management",
      "team": "psm-enablement",
      "description": "Interest Plans Microfrontend"
    },
    {
      "repository_name": "mf-time-deposit-management",
      "team": "psm-enablement",
      "description": "Time Deposit Products Microfrontend"
    },
    {
      "repository_name": "fee-models-bff",
      "team": "psm-enablement",
      "description": "BFF with core fee models features"
    },
    {
      "repository_name": "mf-fee-models",
      "team": "psm-enablement",
      "description": "Fee Models Microfrontend"
    },
    {
      "repository_name": "frontend-commons",
      "team": "psm-enablement",
      "description": "Commons artifacts for frontend development"
    },
    {
      "repository_name": "time-deposits-bff",
      "team": "psm-enablement",
      "description": "Time Deposits BFF"
    },
    {
      "repository_name": "mf-open-id",
      "team": "psm-enablement",
      "description": "Open Id Microfrontend"
    },
    {
      "repository_name": "mf-notifications",
      "team": "psm-enablement",
      "description": "Notifications Microfrontend"
    },
    {
      "repository_name": "console-financial-operations-bff",
      "team": "psm-enablement",
      "description": "The console-financial-operations-bff project is responsible for serves specifics endpoints for console financial operations domain."
    },
    {
      "repository_name": "crm-api",
      "team": "psm-enablement",
      "description": "crm-api repository managed by Enablement team"
    },
    {
      "repository_name": "notifications-bff",
      "team": "psm-enablement",
      "description": "The notifications-bff project is responsible for serves specific endpoints for notifications domain for control-center"
    },
    {
      "repository_name": "notifications-parser-worker",
      "team": "psm-enablement",
      "description": "The notifications-parser-worker project is responsible for parsing notifications for the control center"
    },
    {
      "repository_name": "control-center-notifications-api",
      "team": "psm-enablement",
      "description": "The control-center-notifications-api project is responsible for serves specific endpoints for notifications domain for bff"
    },
    {
      "repository_name": "financial-accounting",
      "team": "psm-finaccounting",
      "description": "psm-finaccounting monorepo"
    },
    {
      "repository_name": "accounting-listener-worker",
      "team": "psm-finaccounting",
      "description": "Accounting listener worker"
    },
    {
      "repository_name": "accounting-event-builder-worker",
      "team": "psm-finaccounting",
      "description": "Accounting event builder worker"
    },
    {
      "repository_name": "financial-accounting-templates",
      "team": "psm-finaccounting",
      "description": "psm-finaccounting monorepo template"
    },
    {
      "repository_name": "accounting-api",
      "team": "psm-finaccounting",
      "description": "To centralize accounting endpoints."
    },
    {
      "repository_name": "api-outbound-gateway",
      "team": "psm-identity",
      "description": "Api gateway for egress requests management"
    },
    {
      "repository_name": "ping-identity-users-api",
      "team": "psm-identity",
      "description": "API responsible to integrate user management (creation, retrieval, updates and deletion of users) in PingID SDK"
    },
    {
      "repository_name": "pismo-ping-access",
      "team": "psm-identity",
      "description": "Ping Access pismo customizations"
    },
    {
      "repository_name": "access-token-manager",
      "team": "psm-identity",
      "description": "This repository is responsible to managing access tokens for accessing client apis"
    },
    {
      "repository_name": "webhook-signature-key-service",
      "team": "psm-identity",
      "description": "Service responsible for creating and exposing Webhook Signature keys"
    },
    {
      "repository_name": "tf-module-identity-config",
      "team": "psm-identity",
      "description": "Terraform module responsible for creating the identity-config resources"
    },
    {
      "repository_name": "identity-resources-watcher",
      "team": "psm-identity",
      "description": "This repository is responsible for watching for tls certificate expiration"
    },
    {
      "repository_name": "outbound-api-gateway-routes",
      "team": "psm-identity",
      "description": "Api gateway Routes for egress requests management"
    },
    {
      "repository_name": "identity-operator",
      "team": "psm-identity",
      "description": "The Identity Operator Repository"
    },
    {
      "repository_name": "passport-bff",
      "team": "psm-identity",
      "description": "Bff passport-api to control-center"
    },
    {
      "repository_name": "certificates-api",
      "team": "psm-identity",
      "description": "certificates-api repository managed by identity team"
    },
    {
      "repository_name": "api-gateway-policy-adm",
      "team": "psm-identity",
      "description": "api-gateway-policy-adm repository managed by Identity team"
    },
    {
      "repository_name": "itauotp-api",
      "team": "psm-identity",
      "description": "API to authenticate and authorize incoming itau requests"
    },
    {
      "repository_name": "passport-api",
      "team": "psm-identity",
      "description": "Api for authentication and authorization"
    },
    {
      "repository_name": "pismo-zuul-gateway",
      "team": "psm-identity",
      "description": "pismo-zuul-gateway repository managed by Identity team"
    },
    {
      "repository_name": "api-gateway-policies",
      "team": "psm-identity",
      "description": "This repository will contain resource files for setting up api-gateway-policy-adm configuration."
    },
    {
      "repository_name": "instantpay-watcher-worker",
      "team": "psm-instantpay",
      "description": "Worker that analyzes and restores the functionality of our apis."
    },
    {
      "repository_name": "psm-instantpay",
      "team": "psm-instantpay",
      "description": "Squad repository to store common terraforms, scripts and API collections"
    },
    {
      "repository_name": "instantpay-lib",
      "team": "psm-instantpay",
      "description": "Golang lib with common structs, interfaces, accross instantpay repos"
    },
    {
      "repository_name": "qrcode-api",
      "team": "psm-instantpay",
      "description": "API for QRCODE generation and payload for payment"
    },
    {
      "repository_name": "upi-inbound-gateway-api",
      "team": "psm-instantpay",
      "description": "API for UPI PSP providers integrations"
    },
    {
      "repository_name": "upi-api",
      "team": "psm-instantpay",
      "description": "API for UPI core flows"
    },
    {
      "repository_name": "instantpay-scheduler-api",
      "team": "psm-instantpay",
      "description": "API responsible for schedule pix payment in the instant pay platform"
    },
    {
      "repository_name": "banking-auth-api",
      "team": "psm-instantpay",
      "description": "banking-auth-api repository managed by InstantPay team"
    },
    {
      "repository_name": "pix-api",
      "team": "psm-instantpay",
      "description": "pix-api repository managed by InstantPay team"
    },
    {
      "repository_name": "pix-dict-api",
      "team": "psm-instantpay",
      "description": "pix-dict-api repository managed by InstantPay team"
    },
    {
      "repository_name": "spi-gateway-api",
      "team": "psm-instantpay",
      "description": "spi-gateway-api repository managed by InstantPay team"
    },
    {
      "repository_name": "spi-gateway-dict-api",
      "team": "psm-instantpay",
      "description": "spi-gateway-dict-api repository managed by InstantPay team"
    },
    {
      "repository_name": "interest-mgmt-redemption-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-daily-closing-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue dailyClosing and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-reports-lambda",
      "team": "psm-interestmgt",
      "description": "Reports to be generated to the clients."
    },
    {
      "repository_name": "interest-mgmt-daily-closing-reports-datalake",
      "team": "psm-interestmgt",
      "description": "Daily closing reports to be generated to the clients."
    },
    {
      "repository_name": "interest-mgmt-infrastructure",
      "team": "psm-interestmgt",
      "description": "Shared infrastructure to the interest management projects."
    },
    {
      "repository_name": "interest-mgmt-registration-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process all registration operations for Assets Interest Management"
    },
    {
      "repository_name": "interest-mgmt-operation-api",
      "team": "psm-interestmgt",
      "description": "Project Assets Interest Management operation endpoints"
    },
    {
      "repository_name": "interest-mgmt-redemption-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process all redemption operations for Assets Interest Management"
    },
    {
      "repository_name": "interest-mgmt-accrual-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process all accrual operations for Assets Interest Management"
    },
    {
      "repository_name": "interest-mgmt-registration-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-assets-integration-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process integration for assets"
    },
    {
      "repository_name": "interest-mgmt-interest-plan-api",
      "team": "psm-interestmgt",
      "description": "API responsible for the interest plan domain."
    },
    {
      "repository_name": "interest-mgmt-interest-deposit-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-redemption-cancellation-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-registration-cancellation-lambda",
      "team": "psm-interestmgt",
      "description": "Project will be responsible for consuming a queue and saving data in s3."
    },
    {
      "repository_name": "interest-mgmt-registration-cancellation-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process all registration cancellation operations for Assets Interest Management"
    },
    {
      "repository_name": "interest-mgmt-redemption-cancellation-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process all redemption cancellation operations for Assets Interest Management"
    },
    {
      "repository_name": "interest-mgmt-balance-difference-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process registration or redemption in file"
    },
    {
      "repository_name": "interest-mgmt-python-spark-template",
      "team": "psm-interestmgt",
      "description": "A template repo to showcase a python with spark repo template with project management, deocker, linters, formaters and metrics setup."
    },
    {
      "repository_name": "interest-mgmt-api-collections-docs",
      "team": "psm-interestmgt",
      "description": "A repo containing all API collections, environments and docs."
    },
    {
      "repository_name": "interest-mgmt-qa",
      "team": "psm-interestmgt",
      "description": "A repo containing data generation and other QA code."
    },
    {
      "repository_name": "interest-mgmt-daily-ledgers-datalake",
      "team": "psm-interestmgt",
      "description": "Project to process daily ledgers."
    },
    {
      "repository_name": "pod-container",
      "team": "psm-internationalui",
      "description": "Container application for the POD micro frontends"
    },
    {
      "repository_name": "pod-mf-account",
      "team": "psm-internationalui",
      "description": "Accounts micro frontends"
    },
    {
      "repository_name": "pod-mf-cards",
      "team": "psm-internationalui",
      "description": "Cards micro frontends"
    },
    {
      "repository_name": "pod-mf-lending",
      "team": "psm-internationalui",
      "description": "Lending micro frontend"
    },
    {
      "repository_name": "mf-lending-config",
      "team": "psm-internationalui",
      "description": "Lending configuration micro frontend"
    },
    {
      "repository_name": "pod-mf-notify",
      "team": "psm-internationalui",
      "description": "Notifications micro frontend"
    },
    {
      "repository_name": "mf-auth",
      "team": "psm-internationalui",
      "description": "Authentication micro frontend"
    },
    {
      "repository_name": "pbolt",
      "team": "psm-internationalui",
      "description": "Frontend component library for POD micro frontends"
    },
    {
      "repository_name": "putils",
      "team": "psm-internationalui",
      "description": "A library of utilities for the POD micro frontends"
    },
    {
      "repository_name": "pod-e2e",
      "team": "psm-internationalui",
      "description": "End to end tests for the operaction dashboard"
    },
    {
      "repository_name": "mf-e2e-tests",
      "team": "psm-internationalui",
      "description": "End to end tests for the micro frontends as a collective"
    },
    {
      "repository_name": "mf-disputes",
      "team": "psm-internationalui",
      "description": "Micro frontend for managing disputes"
    },
    {
      "repository_name": "mf-accounts-management",
      "team": "psm-internationalui",
      "description": "Accounts Management Microfrontend"
    },
    {
      "repository_name": "mf-disputes-management",
      "team": "psm-internationalui",
      "description": "Disputes Management Microfrontend"
    },
    {
      "repository_name": "mf-notify",
      "team": "psm-internationalui",
      "description": "Notify Microfrontend"
    },
    {
      "repository_name": "marola",
      "team": "psm-internationalui",
      "description": "Marola Design System"
    },
    {
      "repository_name": "data-mass-generator-api",
      "team": "psm-legalreports",
      "description": "This API gives customers a single location to access and use numerous tools and resources for creating data masses across Pismo microservices. It simplifies the process of gathering data for testing reasons. "
    },
    {
      "repository_name": "parquet-to-xml-lambda",
      "team": "psm-legalreports",
      "description": "Project of the lambdas used by Squad Legal Reports to convert Parquet files into XML."
    },
    {
      "repository_name": "lending-loans-stream-worker",
      "team": "psm-lending",
      "description": "Worker to process dynanodb stream on loans table"
    },
    {
      "repository_name": "lending-fanout-events-worker",
      "team": "psm-lending",
      "description": "Worker to create loan events"
    },
    {
      "repository_name": "lending-tools",
      "team": "psm-lending",
      "description": "Repository to save scripts and other tools correlating to the lending squad"
    },
    {
      "repository_name": "lending-api",
      "team": "psm-lending",
      "description": "lending-api repository managed by lending team"
    },
    {
      "repository_name": "merchants-fn",
      "team": "psm-merchants",
      "description": "Monorepo for Merchants squad serverless functions (Lambdas)."
    },
    {
      "repository_name": "merchants-terminals-api",
      "team": "psm-merchants",
      "description": "Api for merchants terminals management"
    },
    {
      "repository_name": "marketplace-mf",
      "team": "psm-merchants",
      "description": "Marketplace module for console"
    },
    {
      "repository_name": "merchants-transactional-outbox",
      "team": "psm-merchants",
      "description": "The transactional outbox pattern implementation"
    },
    {
      "repository_name": "merchants-advancements",
      "team": "psm-merchants",
      "description": "The merchants advancements api/worker implementation"
    },
    {
      "repository_name": "seller-mgmt-bff",
      "team": "psm-merchants",
      "description": "The BFF for the marketplace portal version in the control center"
    },
    {
      "repository_name": "seller-mgmt-settlement",
      "team": "psm-merchants",
      "description": "The seller management settlement is a monorepo for a collection of lambdas for proccessing settlement"
    },
    {
      "repository_name": "seller-mgmt-sdk",
      "team": "psm-merchants",
      "description": "The seller management sdk holds some stardard package implementations used across seller management domain"
    },
    {
      "repository_name": "seller-mgmt-api",
      "team": "psm-merchants",
      "description": "The seller management api focuses in the basic crud operations and configurations for seller management domain"
    },
    {
      "repository_name": "mf-creditors-marketplace",
      "team": "psm-merchants",
      "description": "MF for creditors module to the control center application"
    },
    {
      "repository_name": "marketplaces-transactions-api",
      "team": "psm-merchants",
      "description": "marketplaces-transactions-api repository managed by Merchants team"
    },
    {
      "repository_name": "merchants-api",
      "team": "psm-merchants",
      "description": "merchants-api repository managed by Merchants team"
    },
    {
      "repository_name": "seller-mgmt-transactions",
      "team": "psm-merchants",
      "description": "The seller management transactions api/worker focused on merchants transactions implementations"
    },
    {
      "repository_name": "worker-migration-events",
      "team": "psm-migrations",
      "description": "Worker responsible for storing incoming and outgoing migration events information."
    },
    {
      "repository_name": "migrations-test-files-generator",
      "team": "psm-migrations",
      "description": "Generate CSV files to be parsed at worker"
    },
    {
      "repository_name": "migrations-file-handler",
      "team": "psm-migrations",
      "description": "Migration File Handler for Large Files"
    },
    {
      "repository_name": "api-migrations",
      "team": "psm-migrations",
      "description": "Api that serves request for migration calls and consumes migration file parser events"
    },
    {
      "repository_name": "worker-migration-file-parser",
      "team": "psm-migrations",
      "description": "Project to parse migration files and convert it into events"
    },
    {
      "repository_name": "notifier-worker",
      "team": "psm-notifier",
      "description": "Worker that provides notification services for customers"
    },
    {
      "repository_name": "accounts-core",
      "team": "psm-onboarding",
      "description": "Service responsible to manager accounts (and its financial data) and entities."
    },
    {
      "repository_name": "accounts-migration",
      "team": "psm-onboarding",
      "description": "Service responsible to migrate accounts data in the migration flow."
    },
    {
      "repository_name": "payments-config-api",
      "team": "psm-payments",
      "description": "API for Payments Configuration Management"
    },
    {
      "repository_name": "worker-migration-authorizations",
      "team": "psm-payments",
      "description": "Worker to migrate all the authorizations from client to pismo"
    },
    {
      "repository_name": "scheduled-payments-cron",
      "team": "psm-payments",
      "description": "Cron that get all scheduled payments and send to sqs queue"
    },
    {
      "repository_name": "scheduled-payments-worker",
      "team": "psm-payments",
      "description": "Worker that processes all scheduled payments"
    },
    {
      "repository_name": "scheduled-payments-api",
      "team": "psm-payments",
      "description": "API for scheduling payments"
    },
    {
      "repository_name": "on-us-api",
      "team": "psm-payments",
      "description": "API for On Us operation orchestration"
    },
    {
      "repository_name": "payment-methods-api",
      "team": "psm-payments",
      "description": "API for Payment Methods orchestration"
    },
    {
      "repository_name": "balance-watcher-api",
      "team": "psm-payments",
      "description": "API for Balance Watcher"
    },
    {
      "repository_name": "payment-methods-admin-api",
      "team": "psm-payments",
      "description": "API for Payment Methods Administration"
    },
    {
      "repository_name": "scheduler-payments-api",
      "team": "psm-payments",
      "description": "API for scheduled payments"
    },
    {
      "repository_name": "csv-to-sql-generator-sdk",
      "team": "psm-payments",
      "description": "SDK to generate DML commands by reading the csv files."
    },
    {
      "repository_name": "authorizations-api",
      "team": "psm-payments",
      "description": "authorizations-api repository managed by TEAM team"
    },
    {
      "repository_name": "p2ptransactions-api",
      "team": "psm-payments",
      "description": "An api that processes p2p transactions"
    },
    {
      "repository_name": "authorizations-fn",
      "team": "psm-pciauthorizations",
      "description": "Monorepo for Authorizations squad serverless functions (Lambdas)."
    },
    {
      "repository_name": "iso8583-connector-client",
      "team": "psm-pciauthorizations",
      "description": "Service responsible to connect to MIPs and VEAs."
    },
    {
      "repository_name": "network-transactions-config-api",
      "team": "psm-pciauthorizations",
      "description": "Monorepo for Authorizations squad Config API."
    },
    {
      "repository_name": "network-transactions-backoffice-worker",
      "team": "psm-pciauthorizations",
      "description": "Monorepo for Authorizations squad Backoffice worker."
    },
    {
      "repository_name": "network-authorizations-worker",
      "team": "psm-pciauthorizations",
      "description": "Monorepo for Authorizations squad worker."
    },
    {
      "repository_name": "api-network-transactions-standin",
      "team": "psm-pciauthorizations",
      "description": "api-network-transactions-standin repository managed by Authorizations team"
    },
    {
      "repository_name": "direct-network-transactions",
      "team": "psm-pciauthorizations",
      "description": "direct-network-transactions repository managed by Authorizations team"
    },
    {
      "repository_name": "network-transactions-api",
      "team": "psm-pciauthorizations",
      "description": "network-transactions-api repository managed by Authorizations team"
    },
    {
      "repository_name": "processing-code-api",
      "team": "psm-pciauthorizations",
      "description": "processing-code-api repository managed by Authorizations team"
    },
    {
      "repository_name": "clearing-sender-worker",
      "team": "psm-pciiso",
      "description": "Worker responsible for translation incoming event from clearing batch and forwarding it to data platform."
    },
    {
      "repository_name": "sftp-connectors",
      "team": "psm-pciiso",
      "description": "Repository responsible to store all SFTP connectors regarding Mastercard clearing."
    },
    {
      "repository_name": "clearing-files-migration-api",
      "team": "psm-pciiso",
      "description": "API responsible for migrating clearing files."
    },
    {
      "repository_name": "edit-package-automation",
      "team": "psm-pciiso",
      "description": "Repository responsible to store automation script for Edit Package instance."
    },
    {
      "repository_name": "clearing-batch",
      "team": "psm-pciiso",
      "description": "clearing-batch repository managed by PCIIso team"
    },
    {
      "repository_name": "distributor-api",
      "team": "psm-pciiso",
      "description": "distributor-api repository managed by PCIIso team"
    },
    {
      "repository_name": "parser-api",
      "team": "psm-pciiso",
      "description": "parser-api repository managed by PCIIso team"
    },
    {
      "repository_name": "tecban-connector",
      "team": "psm-pciiso",
      "description": "tecban-connector repository managed by PCIIso team"
    },
    {
      "repository_name": "presentation-core",
      "team": "psm-presentation",
      "description": "Presentation Core"
    },
    {
      "repository_name": "presentation-shop-mf",
      "team": "psm-presentation",
      "description": "Presentation Shop Micro Frontend"
    },
    {
      "repository_name": "presentation-shop-checkout-pix-mf",
      "team": "psm-presentation",
      "description": "Presentation Shop Checkout Pix Micro Frontend"
    },
    {
      "repository_name": "presentation-mf-template",
      "team": "psm-presentation",
      "description": "Presentation Micro Frontend Template"
    },
    {
      "repository_name": "presentation-shop-checkout-bnpl-mf",
      "team": "psm-presentation",
      "description": "Presentation Shop Checkout BNPL Micro Frontend"
    },
    {
      "repository_name": "presentation-shop-checkout-cards-mf",
      "team": "psm-presentation",
      "description": "Presentation Shop Checkout Cards Micro Frontend"
    },
    {
      "repository_name": "presentation-shop-checkout-on-us-mf",
      "team": "psm-presentation",
      "description": "Presentation Shop Checkout On Us Micro Frontend"
    },
    {
      "repository_name": "presentation-datastream",
      "team": "psm-presentation",
      "description": "Presentation Datastream"
    },
    {
      "repository_name": "presentation-customer-app",
      "team": "psm-presentation",
      "description": "Presentation Customer App"
    },
    {
      "repository_name": "presentation-customer-app-bff",
      "team": "psm-presentation",
      "description": "Presentation Customer App BFF"
    },
    {
      "repository_name": "recurring-charge-api",
      "team": "psm-revolvingcredit",
      "description": "API to Recurring Charge Management"
    },
    {
      "repository_name": "pismo-florida-zap",
      "team": "psm-revolvingcredit",
      "description": "Repository for pismo-florida-zap,Reporting solution AWS"
    },
    {
      "repository_name": "delinquent-account-api",
      "team": "psm-revolvingcredit",
      "description": "API for delinquent accounts Management"
    },
    {
      "repository_name": "installment-management-api",
      "team": "psm-revolvingcredit",
      "description": "API to handle installment operations"
    },
    {
      "repository_name": "revolving-credit-services-fn",
      "team": "psm-revolvingcredit",
      "description": "Monorepo for Revolving Credit Service squad serverless functions (Lambdas)."
    },
    {
      "repository_name": "calendar-management-api",
      "team": "psm-revolvingcredit",
      "description": "API to handle calendar operations"
    },
    {
      "repository_name": "poc-ledger",
      "team": "psm-rules",
      "description": "POC for ledger api"
    },
    {
      "repository_name": "accumulator-api",
      "team": "psm-rules",
      "description": "The main objective of Accumulator API is accumulate Transactions' amount and number according to the time window, bucket identifier and/or Processing Codes configured previously"
    },
    {
      "repository_name": "balances-limits-api",
      "team": "psm-rules",
      "description": "The main purpose of this API is to return account balances and limits efficiently."
    },
    {
      "repository_name": "balances-config-api",
      "team": "psm-rules",
      "description": "The main purpose of this API is to return configs to correctly manipulate and impact the balances in the ledger."
    },
    {
      "repository_name": "ledger",
      "team": "psm-rules",
      "description": "Ledger project"
    },
    {
      "repository_name": "ledger-api",
      "team": "psm-rules",
      "description": "ledger-api repository managed by Rules team"
    },
    {
      "repository_name": "rules-api",
      "team": "psm-rules",
      "description": "rules-api repository managed by Rules team"
    },
    {
      "repository_name": "restrictions",
      "team": "psm-rules",
      "description": "Service to customize restrictions on specific flow dynamically"
    },
    {
      "repository_name": "sandbox-bff",
      "team": "psm-sandbox",
      "description": "BFF to externalize endpoints"
    },
    {
      "repository_name": "example-repo",
      "team": "psm-security",
      "description": "Example repository creation"
    },
    {
      "repository_name": "tf-module-fms-policy",
      "team": "psm-security",
      "description": "Terraform module to create and manage AWS Firewall Manager policies"
    },
    {
      "repository_name": "tf-module-access-analyzer",
      "team": "psm-security",
      "description": "Terraform resource for managing an AWS AccessAnalyzer"
    },
    {
      "repository_name": "psm-redteam-utils",
      "team": "psm-security",
      "description": "Repository to store Red Team scripts and tools."
    },
    {
      "repository_name": "permission-request-automation",
      "team": "psm-security",
      "description": "Repository of the permission request automation (JIRA+Okta) ."
    },
    {
      "repository_name": "tf-module-pismo-identity-center",
      "team": "psm-security",
      "description": "Terraform module to create and manage IAM Identity Center"
    },
    {
      "repository_name": "aws-iam-identity-center-pismo",
      "team": "psm-security",
      "description": "Central repository to manage IAM Identity Center"
    },
    {
      "repository_name": "tf-module-pismo-inspector",
      "team": "psm-security",
      "description": "Terraform module to create and manage AWS Inspector"
    },
    {
      "repository_name": "aws-pismo-inspector-management",
      "team": "psm-security",
      "description": "Central repository to manage AWS Inspector"
    },
    {
      "repository_name": "tf-module-pismo-guardduty",
      "team": "psm-security",
      "description": "Terraform module to create and manage AWS GuardDuty"
    },
    {
      "repository_name": "aws-pismo-guardduty-management",
      "team": "psm-security",
      "description": "Central repository to manage AWS GuardDuty"
    },
    {
      "repository_name": "tf-module-pismo-securityhub",
      "team": "psm-security",
      "description": "Terraform module to create and manage AWS securityhub"
    },
    {
      "repository_name": "aws-pismo-securityhub-management",
      "team": "psm-security",
      "description": "Central repository to manage AWS securityhub"
    },
    {
      "repository_name": "psm-security-architecture-tools",
      "team": "psm-security",
      "description": "Repository to manage security architecture tools"
    },
    {
      "repository_name": "redteam-exercises",
      "team": "psm-security",
      "description": "Repository to store Red Team APIs using in some RedTeam Engagements."
    },
    {
      "repository_name": "aws-rds-user-audit-log",
      "team": "psm-security",
      "description": "Service responsible for creating and exposing Webhook Signature keys"
    },
    {
      "repository_name": "devsecops-sandbox",
      "team": "psm-security",
      "description": "Repository to store DevSecOps pipeline test project"
    },
    {
      "repository_name": "devsecops-assets",
      "team": "psm-security",
      "description": "Repository to store DevSecOps code for pipeline "
    },
    {
      "repository_name": "github-backup",
      "team": "psm-security",
      "description": "Repository to run github backups weekly"
    },
    {
      "repository_name": "security-pipeline-monitor-service",
      "team": "psm-security",
      "description": "Repository to store Security Pipeline monitor service managed by DevSecOps team"
    },
    {
      "repository_name": "aws-pismo-aha-management",
      "team": "psm-security",
      "description": "Central repository to manage Aws Health Aware"
    },
    {
      "repository_name": "timeline",
      "team": "psm-setup",
      "description": "Repository for timeline api/worker"
    },
    {
      "repository_name": "programs-worker",
      "team": "psm-setup",
      "description": "Worker for Programs Events"
    },
    {
      "repository_name": "org",
      "team": "psm-setup",
      "description": "Repository for org api/worker"
    },
    {
      "repository_name": "orgs-core",
      "team": "psm-setup",
      "description": "Repository for org api/worker"
    },
    {
      "repository_name": "divisions-core",
      "team": "psm-setup",
      "description": "Repository for disivion api"
    },
    {
      "repository_name": "holidays-core",
      "team": "psm-setup",
      "description": "Repository for holidays api"
    },
    {
      "repository_name": "timeline-parser-worker",
      "team": "psm-setup",
      "description": "Worker for parser events to timeline"
    },
    {
      "repository_name": "orgs-operation",
      "team": "psm-setup",
      "description": "repository for orgs-operation api and worker"
    },
    {
      "repository_name": "orgs-operation-worker",
      "team": "psm-setup",
      "description": "repository for orgs-operation-worker"
    },
    {
      "repository_name": "console-programs-bff",
      "team": "psm-setup",
      "description": "console-programs-bff repository managed by Setup team"
    },
    {
      "repository_name": "events-api",
      "team": "psm-setup",
      "description": "events-api repository managed by Setup team"
    },
    {
      "repository_name": "orgs-api",
      "team": "psm-setup",
      "description": "Organizations API"
    },
    {
      "repository_name": "programs-api",
      "team": "psm-setup",
      "description": "programs-api repository managed by Setup team"
    },
    {
      "repository_name": "psm-soc-utils",
      "team": "psm-soc",
      "description": "Repository to store SOC Team scripts and tools."
    },
    {
      "repository_name": "pismo-aft-account-request",
      "team": "psm-sre",
      "description": "AFT: Account Factory for Terraform: Repo 1"
    },
    {
      "repository_name": "pismo-aft-customizations-provisioning",
      "team": "psm-sre",
      "description": "AFT: Account Factory for Terraform: Repo 2"
    },
    {
      "repository_name": "pismo-aft-customizations-global",
      "team": "psm-sre",
      "description": "AFT: Account Factory for Terraform: Repo 3"
    },
    {
      "repository_name": "pismo-aft-customizations-account",
      "team": "psm-sre",
      "description": "AFT: Account Factory for Terraform: Repo 4"
    },
    {
      "repository_name": "pismo-cnc-aft-setup",
      "team": "psm-sre",
      "description": "AFT: Account Factory for Terraform: Setup/Installation"
    },
    {
      "repository_name": "terraform-arch-review",
      "team": "psm-sre",
      "description": "Platform/Click-n-create: refactoring 1"
    },
    {
      "repository_name": "terraform-platform",
      "team": "psm-sre",
      "description": "Platform/Click-n-create: refactoring 2"
    },
    {
      "repository_name": "terraform-platform-live",
      "team": "psm-sre",
      "description": "Platform/Click-n-create: refactoring 3"
    },
    {
      "repository_name": "pismo-subnetcalc",
      "team": "psm-sre",
      "description": "Command-line utility in Python to calculate VPC subnet ranges"
    },
    {
      "repository_name": "pismo-cnc",
      "team": "psm-sre",
      "description": "Terraform definitions to provision new Github repositories by 'Click-n-Create'"
    },
    {
      "repository_name": "devops-automations",
      "team": "psm-sre",
      "description": "This repo stores scripts, docker images, and small apps made by Pismo to automate processes."
    },
    {
      "repository_name": "dba-sre-scripts",
      "team": "psm-sre",
      "description": "Repository to save useful scripts for maintenance and monitoring of Pismo databases."
    },
    {
      "repository_name": "tpm-automation-scripts",
      "team": "psm-sre",
      "description": "Repository to save useful scripts for Technical Program Management within Production Engineering"
    },
    {
      "repository_name": "tf-module-alb-access-logs-athena",
      "team": "psm-sre",
      "description": "Creates Athena's query tables based on ALB access logs"
    },
    {
      "repository_name": "goalkeeper-vanisher",
      "team": "psm-sre",
      "description": "Repository to save goalkeeper-vanisher automation scripts."
    },
    {
      "repository_name": "jenkins-migration-validator",
      "team": "psm-sre",
      "description": "Repository to save jenkins-migration-validator automation scripts."
    },
    {
      "repository_name": "scheduled-scale",
      "team": "psm-sre",
      "description": "Repository to save goalkeeper-vanisher automation scripts."
    },
    {
      "repository_name": "tf-module-db-user",
      "team": "psm-sre",
      "description": "Repository to enable create user for any database."
    },
    {
      "repository_name": "tf-module-ebs-default-encryption",
      "team": "psm-sre",
      "description": "Module to set EBS default encryption"
    },
    {
      "repository_name": "tf-module-vpc-endpoint",
      "team": "psm-sre",
      "description": "Terraoform module to create AWS VPC Endpoints"
    },
    {
      "repository_name": "db-watcher",
      "team": "psm-sre",
      "description": "Watcher app which will validate DB's general latency by using Ping methods"
    },
    {
      "repository_name": "tf-module-aws-transfer-family-sftp",
      "team": "psm-sre",
      "description": "Terraform module to create the AWS Transfer Family SFTP servers"
    },
    {
      "repository_name": "gcal-slack-bot",
      "team": "psm-sre",
      "description": "Serverless function to sync Google Calendar events to Slack"
    },
    {
      "repository_name": "pismo-remote-runner",
      "team": "psm-sre",
      "description": "Code examples: Testing alternatives to submit deploy scripts into different AWS accounts"
    },
    {
      "repository_name": "tf-module-db-cluster",
      "team": "psm-sre",
      "description": "Repository to create cluster instances."
    },
    {
      "repository_name": "tf-module-db-instance",
      "team": "psm-sre",
      "description": "Repository to create cluster instances."
    },
    {
      "repository_name": "pismo-ipam-aws",
      "team": "psm-sre",
      "description": "Terraform deploy/state: AWS/IPAM: IPAM, scopes, and pools for AWS"
    },
    {
      "repository_name": "tf-module-aws-ec2-instance",
      "team": "psm-sre",
      "description": "Terraform module for provisioning a general-purpose EC2 instance."
    },
    {
      "repository_name": "pismo-sre",
      "team": "psm-sre",
      "description": "Terraform definitions to provision new Github repositories by SRE team"
    },
    {
      "repository_name": "tf-module-elasticache-redis-global-replication",
      "team": "psm-sre",
      "description": "Terraform module for provisioning elasticache redis global replication group."
    },
    {
      "repository_name": "goalkeeper",
      "team": "psm-sre",
      "description": "This repo persists argo workflows manifests"
    },
    {
      "repository_name": "tf-module-aws-routes",
      "team": "psm-sre",
      "description": "Terraform module for provisioning aws vpc routes."
    },
    {
      "repository_name": "vault",
      "team": "psm-sre",
      "description": "Vault infrastructure foundation and terraform modules"
    },
    {
      "repository_name": "tf-module-lb",
      "team": "psm-sre",
      "description": "Terraform module for provisioning AWS Load Balancers."
    },
    {
      "repository_name": "iac",
      "team": "psm-sre",
      "description": "IaC monorepo"
    },
    {
      "repository_name": "docker-policies",
      "team": "psm-sre",
      "description": "Docker checks to prevent security vulnerabilities"
    },
    {
      "repository_name": "workflows",
      "team": "psm-sre",
      "description": "Pismo Workflows Service (PWS) ⚙️⚡ https://workflows.internal.pismo.services"
    },
    {
      "repository_name": "tf-module-aws-security-group",
      "team": "psm-sre",
      "description": "Terraform module to manage AWS security groups and rules."
    },
    {
      "repository_name": "tf-module-serverless-redis",
      "team": "psm-sre",
      "description": "Terraform module to manage Redis Serverless Appliances"
    },
    {
      "repository_name": "tf-module-aurora-mysql",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new infra to RDS Aurora Mysql"
    },
    {
      "repository_name": "tf-module-aurora-postgres",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new infra to RDS Aurora PostgreSQL"
    },
    {
      "repository_name": "tf-module-aurora-mysql-user",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new users with admin profile to RDS Aurora Mysql"
    },
    {
      "repository_name": "tf-module-aurora-postgres-user",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new users with admin profile to RDS Aurora PostgreSQL"
    },
    {
      "repository_name": "tf-rds-iam-user-mysql",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new users with IAM and admin profile to RDS Aurora Mysql"
    },
    {
      "repository_name": "tf-rds-iam-user-postgres",
      "team": "psm-sre-datadm",
      "description": "Terraform to create new users with  IAM and admin profile to RDS Aurora PostgreSQL"
    },
    {
      "repository_name": "sre-platform-scripts",
      "team": "psm-sreplatform",
      "description": "Squad Platform's useful scripts for daily-basis ops"
    },
    {
      "repository_name": "platform-cicd-bridge",
      "team": "psm-sreplatform",
      "description": "Bridge for continuous integration between github and argocd"
    },
    {
      "repository_name": "kubernetes-addons-catalog",
      "team": "psm-sreplatform",
      "description": "Catalog for kubernetes addons"
    },
    {
      "repository_name": "pismo-blueprints-addons",
      "team": "psm-sreplatform",
      "description": "Repository to create addons that need AWS resources"
    },
    {
      "repository_name": "platform-gitops",
      "team": "psm-sreplatform",
      "description": "Continuous integration between github and argocd"
    },
    {
      "repository_name": "pismo-cnc-testing",
      "team": "psm-sreplatform",
      "description": "Repository to create a test demo to showcase CNC"
    },
    {
      "repository_name": "tf-module-aws-eks",
      "team": "psm-sreplatform",
      "description": "Terraform module to create AWS EKS"
    },
    {
      "repository_name": "chaos-tests",
      "team": "psm-staffengineering",
      "description": "Infrastructure tests with chaos toolkit"
    },
    {
      "repository_name": "learning-api",
      "team": "psm-staffengineering",
      "description": "Api responsible for the learning process of pismo devs"
    },
    {
      "repository_name": "rds-stop-scheduler",
      "team": "psm-staffengineering",
      "description": "Stop and start instance, rds resources and autoscaling groups with lambda function"
    },
    {
      "repository_name": "pocs-squad-staffengineering",
      "team": "psm-staffengineering",
      "description": "pocs of squad staff"
    },
    {
      "repository_name": "debug-gitstream",
      "team": "psm-staffengineering",
      "description": "debug gitStream.cm integration"
    },
    {
      "repository_name": "qa",
      "team": "psm-staffengineering",
      "description": "qa repository"
    },
    {
      "repository_name": "pismo-patterns-and-guides",
      "team": "psm-staffengineering",
      "description": "Pismo Patterns and Guides for Engineering"
    },
    {
      "repository_name": "ecr-cleaner",
      "team": "psm-staffengineering",
      "description": "Service responsible for carrying out automated scanning and cleaning of images stored in the ECR"
    },
    {
      "repository_name": "dr-tools",
      "team": "psm-staffengineering",
      "description": "Tools to enable disaster recovery"
    },
    {
      "repository_name": "arch-docs-tools",
      "team": "psm-staffengineering",
      "description": "Tools to build and publish architectural documentation as code"
    },
    {
      "repository_name": "codefresh-gitops-poc-apps",
      "team": "psm-staffengineering",
      "description": "Argo CD Apps repo"
    },
    {
      "repository_name": "codefresh-gitops-poc-config",
      "team": "psm-staffengineering",
      "description": "Config repo: where the configurations of the apps are stored: replicas, image tags, chart.yaml, dependencies.yaml"
    },
    {
      "repository_name": "codefresh-gitops-poc-internal-shared-config",
      "team": "psm-staffengineering",
      "description": "Internal Shared Configuration repo"
    },
    {
      "repository_name": "transactions-migration-worker",
      "team": "psm-transactions",
      "description": "Service responsible for Transactions Migration flow"
    },
    {
      "repository_name": "transactional-sender-worker",
      "team": "psm-transactions",
      "description": "Worker responsible for sending transaction domain events (GO version)."
    },
    {
      "repository_name": "transactions-configuration-api",
      "team": "psm-transactions",
      "description": "Service responsible for configuration of Transaction Types and Transaction flows"
    },
    {
      "repository_name": "transactions-core-api",
      "team": "psm-transactions",
      "description": "transactions-core-api repository managed by Transactions team"
    }
  ],
  "total_count": 541
}

